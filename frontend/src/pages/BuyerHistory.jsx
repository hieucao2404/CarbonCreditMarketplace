import React, { useState, useEffect } from "react";
import SidebarBuyer from "../components/BuyerSidebar";
import Header from "../components/BuyerHeader";
import { ShoppingCart, Download } from "lucide-react";
import axios from "axios";

export default function BuyerHistory() {
  const [activeTab, setActiveTab] = useState("purchase");
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(false);

  // Tab ‚ÄúCh·ª©ng nh·∫≠n‚Äù v√† ‚ÄúTh·ªëng k√™‚Äù v·∫´n gi·ªØ nguy√™n
  const certificates = [
    { id: "CERT-001", amount: 25, date: "2024-12-25" },
    { id: "CERT-002", amount: 50, date: "2024-12-23" },
  ];

  // üöÄ G·ªçi API khi v√†o tab ‚ÄúGiao d·ªãch mua‚Äù
  useEffect(() => {
    if (activeTab === "purchase") {
      const fetchTransactions = async () => {
        setLoading(true);
        try {
          const token = localStorage.getItem("token"); // n·∫øu c√≥ JWT
          const res = await axios.get(
            "http://localhost:8080/api/transactions/my-history?page=0&size=10",
            {
              headers: {
                Authorization: `Bearer ${token}`,
              },
            }
          );

          // API c·ªßa b·∫°n tr·∫£ v·ªÅ d·∫°ng ApiResponse<Page<TransactionDTO>>
          // n√™n c·∫ßn truy c·∫≠p res.data.data.content
          const apiData = res.data?.data?.content || [];
          const mappedData = apiData.map((t) => ({
            id: t.id,
            buyer: t.buyer?.fullName || "Ng∆∞·ªùi mua ·∫©n danh",
            amount: t.amount,
            date: t.date || t.createdAt?.substring(0, 10),
            price: `${t.price?.toLocaleString("vi-VN")} VND`,
            status:
              t.status === "COMPLETED"
                ? "Ho√†n th√†nh"
                : t.status === "PENDING"
                ? "ƒêang x·ª≠ l√Ω"
                : "ƒê√£ h·ªßy",
          }));
          setTransactions(mappedData);
        } catch (err) {
          console.error("L·ªói khi l·∫•y danh s√°ch giao d·ªãch:", err);
        } finally {
          setLoading(false);
        }
      };
      fetchTransactions();
    }
  }, [activeTab]);

  return (
    <div className="flex min-h-screen bg-[#F9FAFB]">
      {/* Sidebar */}
      <SidebarBuyer />

      {/* Main Content */}
      <div className="flex flex-col flex-1">
        <Header />

        <main className="p-8 w-full">
          {/* Page Title */}
          <div className="mb-6">
            <h1 className="text-2xl font-semibold text-gray-800">
              L·ªãch s·ª≠ ho·∫°t ƒë·ªông
            </h1>
            <p className="text-gray-500 text-sm mt-1">
              T·ªïng quan v·ªÅ t·∫•t c·∫£ ho·∫°t ƒë·ªông mua t√≠n ch·ªâ carbon
            </p>
          </div>

          {/* Tabs */}
          <div className="bg-white rounded-2xl border border-gray-200 p-5">
            <div className="flex bg-gray-100 rounded-full text-sm font-medium text-gray-600 mb-6">
              {["purchase", "certificate", "stats"].map((tab) => (
                <button
                  key={tab}
                  onClick={() => setActiveTab(tab)}
                  className={`flex-1 text-center py-2 rounded-full transition ${
                    activeTab === tab
                      ? "bg-white text-gray-900 shadow font-semibold"
                      : "hover:text-gray-800"
                  }`}
                >
                  {tab === "purchase"
                    ? "Giao d·ªãch mua"
                    : tab === "certificate"
                    ? "Ch·ª©ng nh·∫≠n"
                    : "Th·ªëng k√™"}
                </button>
              ))}
            </div>

            {/* Giao d·ªãch mua */}
            {activeTab === "purchase" && (
              <div className="space-y-3">
                {loading ? (
                  <p className="text-gray-500 text-sm">ƒêang t·∫£i d·ªØ li·ªáu...</p>
                ) : transactions.length === 0 ? (
                  <p className="text-gray-500 text-sm">
                    Hi·ªán ch∆∞a c√≥ giao d·ªãch n√†o.
                  </p>
                ) : (
                  transactions.map((tx) => (
                    <div
                      key={tx.id}
                      className="flex items-center justify-between border border-gray-200 rounded-xl px-4 py-3 bg-white hover:bg-gray-50 transition"
                    >
                      <div className="flex items-center gap-3">
                        <ShoppingCart size={18} className="text-blue-500" />
                        <div>
                          <p className="text-sm font-medium text-gray-800">
                            {tx.amount} tCO‚ÇÇ t·ª´ {tx.buyer}
                          </p>
                          <p className="text-xs text-gray-500">{tx.date}</p>
                        </div>
                      </div>

                      <div className="flex items-center gap-3">
                        <p className="text-sm font-medium text-gray-800">
                          {tx.price}
                        </p>
                        <span
                          className={`text-xs font-semibold px-3 py-1 rounded-full ${
                            tx.status === "Ho√†n th√†nh"
                              ? "bg-black text-white"
                              : "bg-gray-200 text-gray-700"
                          }`}
                        >
                          {tx.status}
                        </span>
                      </div>
                    </div>
                  ))
                )}
              </div>
            )}

            {/* Ch·ª©ng nh·∫≠n */}
            {activeTab === "certificate" && (
              <div className="space-y-3">
                {certificates.map((cert) => (
                  <div
                    key={cert.id}
                    className="flex items-center justify-between border border-gray-200 rounded-xl px-4 py-3 bg-white hover:bg-gray-50 transition"
                  >
                    <div className="flex items-center gap-3">
                      <div className="text-green-600 font-semibold">üèÖ</div>
                      <div>
                        <p className="text-sm font-medium text-gray-800">
                          Ch·ª©ng nh·∫≠n #{cert.id} ‚Äì {cert.amount} tCO‚ÇÇ
                        </p>
                        <p className="text-xs text-gray-500">{cert.date}</p>
                      </div>
                    </div>

                    <button className="flex items-center gap-1 text-sm font-medium text-gray-700 border border-gray-300 px-3 py-1.5 rounded-lg hover:bg-gray-100">
                      <Download size={16} /> T·∫£i xu·ªëng
                    </button>
                  </div>
                ))}
              </div>
            )}

            {/* Th·ªëng k√™ */}
            {activeTab === "stats" && (
              <div className="grid grid-cols-1 md:grid-cols-2 gap-5">
                <div className="border border-gray-200 rounded-xl bg-white p-5">
                  <h3 className="font-semibold text-gray-800 mb-2">
                    T·ªïng quan mua s·∫Øm
                  </h3>
                  <p className="text-sm text-gray-700">
                    T·ªïng t√≠n ch·ªâ ƒë√£ mua:{" "}
                    <span className="font-medium text-gray-900">
                      1250.5 tCO‚ÇÇ
                    </span>
                  </p>
                  <p className="text-sm text-gray-700">
                    T·ªïng chi ph√≠:{" "}
                    <span className="font-medium text-gray-900">
                      31,250,000 VND
                    </span>
                  </p>
                  <p className="text-sm text-gray-700">
                    Gi√° trung b√¨nh:{" "}
                    <span className="font-medium text-gray-900">
                      24,990 VND/tCO‚ÇÇ
                    </span>
                  </p>
                  <p className="text-sm text-gray-700">
                    S·ªë giao d·ªãch:{" "}
                    <span className="font-medium text-gray-900">3</span>
                  </p>
                </div>

                <div className="border border-gray-200 rounded-xl bg-white p-5">
                  <h3 className="font-semibold text-gray-800 mb-2">
                    T√°c ƒë·ªông m√¥i tr∆∞·ªùng
                  </h3>
                  <p className="text-sm text-gray-700">
                    CO‚ÇÇ offset:{" "}
                    <span className="font-medium text-green-600">
                      1,250,500 kg
                    </span>
                  </p>
                  <p className="text-sm text-gray-700">
                    M·ª©c trung h√≤a carbon:{" "}
                    <span className="font-medium text-green-600">85%</span>
                  </p>
                  <p className="text-sm text-gray-700">
                    T∆∞∆°ng ƒë∆∞∆°ng c√¢y ƒë∆∞·ª£c tr·ªìng:{" "}
                    <span className="font-medium text-green-600">
                      56,273 c√¢y
                    </span>
                  </p>
                </div>
              </div>
            )}
          </div>
        </main>
      </div>
    </div>
  );
}
